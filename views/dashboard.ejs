<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Marketing Dashboard</title>    
    <style>
        .chart-container {
            display: flex;
            justify-content: space-around;
        }

        .chart-wrapper {
            width: 45%;
        }
    </style>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</head>

<body>
    <h1 style="text-align: center;">DPS-BS Marketing Dashboard</h1>

    <!-- Bar chart for Total Followers -->
    <div class="chart-container">
        <div class="chart-wrapper">
            <h3>Linkedin:Total Followers</h3>
            <canvas id="totalFollowersChart" width="400" height="200"></canvas>
        </div>
        <div class="chart-wrapper">
            <h3>Linkedin:New Followers(last 7 Days)</h3>
            <canvas id="newFollowersChart" width="400" height="200"></canvas>
        </div>
    </div>

    <!-- Side-by-side bar charts for impressions and clicks -->
    <div class="chart-container">
        <div class="chart-wrapper">
            <h3>Linkedin:Impressions</h3>
            <canvas id="impressionsChart" width="400" height="200"></canvas>
        </div>
        <div class="chart-wrapper">
            <h3>Linkedin:Clicks</h3>
            <canvas id="clicksChart" width="400" height="200"></canvas>
        </div>
    </div>

   <h2 style="text-align: center;">Engagement Analytics</h2>

<!-- Flex container to hold the table and chart side by side -->
<div style="display: flex; flex-direction: row; align-items: flex-start; gap: 20px;">

    <!-- Table -->
    <table
        style="width: 50%; border: 5px solid black; border-collapse: collapse; text-align: center; margin-top: 30px;">
        <thead>
            <tr>
                <th style="border: 1px solid black;">Metric</th>
                <th style="border: 1px solid black;">Last Week</th>
                <th style="border: 1px solid black;">This Week</th>
                <th style="border: 1px solid black;">Percentage Change</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td style="border: 1px solid black;">Reactions</td>
                <td style="border: 1px solid black;">
                    <%= weeklyTotals.week1.reactions %>
                </td>
                <td style="border: 1px solid black;">
                    <%= weeklyTotals.week2.reactions %>
                </td>
                <td style="border: 1px solid black;">
                    <%= percentageChanges.reactions.toFixed(2) %>%</td>
            </tr>
            <tr>
                <td style="border: 1px solid black;">Comments</td>
                <td style="border: 1px solid black;">
                    <%= weeklyTotals.week1.comments %>
                </td>
                <td style="border: 1px solid black;">
                    <%= weeklyTotals.week2.comments %>
                </td>
                <td style="border: 1px solid black;">
                    <%= percentageChanges.comments.toFixed(2) %>%</td>
            </tr>
            <tr>
                <td style="border: 1px solid black;">Shares</td>
                <td style="border: 1px solid black;">
                    <%= weeklyTotals.week1.shares %>
                </td>
                <td style="border: 1px solid black;">
                    <%= weeklyTotals.week2.shares %>
                </td>
                <td style="border: 1px solid black;">
                    <%= percentageChanges.shares.toFixed(2) %>%</td>
            </tr>
        </tbody>
    </table>

    <!-- Canvas for the chart -->
    <div style="width: 50%; margin-top: 5px;">
        <canvas id="engagementChart" style="width: 100%; height: 20%;"></canvas>
    </div>

</div>

<script>
    // Pass statsData from server
    const statsData = <%- JSON.stringify(statsData) %>;

    // Prepare the engagement rate data
    const thisWeekEngagementRates = statsData
        .slice(-7) // Get the last 7 days
        .map(data => data.reactions / (data.impressions.organic + data.impressions.sponsored) * 100 || 0);

    const lastWeekEngagementRates = statsData
        .slice(-14, -7) // Get the 7 days before the last week
        .map(data => data.reactions / (data.impressions.organic + data.impressions.sponsored) * 100 || 0);

    const labels = statsData.slice(-7).map(data => data.date); // Get the dates for labels

    // Create the line chart
    const engagementData = {
        labels: labels,
        datasets: [
            {
                label: 'This Week Engagement Rate(%)',
                data: thisWeekEngagementRates,
                borderColor: 'rgba(31, 61, 133, 255)',
                backgroundColor: 'rgba(255, 99, 132, 0)',
                fill: true,
                tension: 0.0// Smooth the line
            },
            {
                label: 'Last Week Engagement Rate(%)',
                data: lastWeekEngagementRates,
                borderColor: 'rgba(189,208,42,255)',
                backgroundColor: 'rgba(255, 99, 132, 0)',
                fill: true,
                tension: 0.0// Smooth the line
            }
        ]
    };

    const engagementCtx = document.getElementById('engagementChart').getContext('2d');
    new Chart(engagementCtx, {
        type: 'line',
        data: engagementData,
    });
</script>


    <!-- Competitor Analysis Table -->
    <h2 style="text-align: center;">Competitor Analysis</h2>
    <div style="display: flex; justify-content: center;">
        <table
            style="width: 50%; border: 5px solid black; border-collapse: collapse; text-align: center; margin-top: 30px;">
            <thead>
                <tr>
                    <th style="border: 1px solid black;">Competitor</th>
                    <th style="border: 1px solid black;">Total Followers</th>
                    <th style="border: 1px solid black;">New Followers</th>
                    <th style="border: 1px solid black;">Interactions</th>
                    <th style="border: 1px solid black;">Posts</th>
                </tr>
            </thead>
            <tbody>
                <% competitorsData.forEach(comp=> { %>
                    <tr>
                        <td style="border: 1px solid black;">
                            <%= comp.name %>
                        </td>
                        <td style="border: 1px solid black;">
                            <%= comp.followers %>
                        </td>
                        <td style="border: 1px solid black;">
                            <%= comp.newFollowers %>
                        </td>
                        <td style="border: 1px solid black;">
                            <%= comp.interactions %>
                        </td>
                        <td style="border: 1px solid black;">
                            <%= comp.posts %>
                        </td>
                    </tr>
                    <% }) %>
            </tbody>
        </table>
    </div>

    <script>
        // Bar chart for total followers
        const totalFollowersData = {
            labels: ['DPS-BS', 'WEKO', 'Sellmore GmbH', 'isales GmbH', 'CompData Computer GmbH', 'Datatronic Software GmbH'],
            datasets: [
                {
                    label: 'Total Followers',
                    data: [2039, 1476, 997, 557, 687, 1429],
                    backgroundColor: [
                        'rgba(31,61,133,255)', // DPS-BS - blue
                        'rgba(200, 200, 200, 0.7)', // WEKO - gray
                        'rgba(200, 200, 200, 0.7)', // Sellmore GmbH - gray
                        'rgba(200, 200, 200, 0.7)', // isales GmbH - gray
                        'rgba(200, 200, 200, 0.7)' , // CompData Computer GmbH - gray
                        'rgba(200, 200, 200, 0.7)'  // CompData Computer GmbH - gray

                    ],
                    borderColor: [
                        'rgba(31,61,133,255)', // DPS-BS - blue
                        'rgba(200, 200, 200, 1)', // WEKO - gray
                        'rgba(200, 200, 200, 1)', // Sellmore GmbH - gray
                        'rgba(200, 200, 200, 1)', // isales GmbH - gray
                        'rgba(200, 200, 200, 1)'  // CompData Computer GmbH - gray
                    ],
                    borderWidth: 1
                }
            ]
        };

        const totalFollowersCtx = document.getElementById('totalFollowersChart').getContext('2d');
        new Chart(totalFollowersCtx, {
            type: 'bar',
            data: totalFollowersData,
            options: {
                scales: {
                    y: {
                        beginAtZero: true,
                        title: {
                            display: true,
                            text: 'Followers'
                        }
                    },
                    x: {
                        title: {
                            display: true,
                            text: 'Competitors'
                        }
                    }
                },
                responsive: true,
                plugins: {
                    legend: {
                        display: false
                    }
                }
            }
        });

        // Bar chart for new followers
        const newFollowersData = {
            labels: ['DPS-BS', 'WEKO', 'Sellmore GmbH', 'isales GmbH', 'CompData Computer GmbH', 'Datatronic Software GmbH'],
            datasets: [
                {
                    label: 'New Followers',
                    data: [50, 23, 19, 4, 2, 9], // Example data
                    backgroundColor: [
                        'rgba(31,61,133,255)', // DPS-BS - blue
                        'rgba(200, 200, 200, 0.7)', // WEKO - gray
                        'rgba(200, 200, 200, 0.7)', // Sellmore GmbH - gray
                        'rgba(200, 200, 200, 0.7)', // isales GmbH - gray
                        'rgba(200, 200, 200, 0.7)',  // CompData Computer GmbH - gray
                        'rgba(200, 200, 200, 0.7)'  // Dattronic - gray
                    ],
                    borderColor: [
                        'rgba(31,61,133,255)', // DPS-BS - blue
                        'rgba(200, 200, 200, 1)', // WEKO - gray
                        'rgba(200, 200, 200, 1)', // Sellmore GmbH - gray
                        'rgba(200, 200, 200, 1)', // isales GmbH - gray
                        'rgba(200, 200, 200, 1)'  // CompData Computer GmbH - gray
                    ],
                    borderWidth: 1
                }
            ]
        };

        const newFollowersCtx = document.getElementById('newFollowersChart').getContext('2d');
        new Chart(newFollowersCtx, {
            type: 'bar',
            data: newFollowersData,
            options: {
                scales: {
                    y: {
                        beginAtZero: true,
                        title: {
                            display: true,
                            text: 'New Followers(last 7 Days)'
                        }
                    },
                    x: {
                        title: {
                            display: true,
                            text: 'Competitors'
                        }
                    }
                },
                responsive: true,
                plugins: {
                    legend: {
                        display: false
                    }
                }
            }
        });

    // Bar chart for impressions (organic and sponsored)
    const impressionsData = {
        labels: ['This Week', 'Last Week'],
        datasets: [
            {
                label: 'Organic Impressions',
                data: [<%= weeklyTotals.week1.impressions.organic %>, <%= weeklyTotals.week2.impressions.organic %>],
                backgroundColor: 'rgba(31,61,133,255)',
                borderColor: 'rgba(31,61,133,255)',
                borderWidth: 1
            },
            {
                label: 'Sponsored Impressions',
                data: [<%= weeklyTotals.week1.impressions.sponsored %>, <%= weeklyTotals.week2.impressions.sponsored %>],
                backgroundColor: 'rgba(189,208,42,255)',
                borderColor: 'rgba(189,208,42,255)',
                borderWidth: 1
            }
        ]
    };

    const impressionsCtx = document.getElementById('impressionsChart').getContext('2d');
    new Chart(impressionsCtx, {
        type: 'bar',
        data: impressionsData,
        options: {
            scales: {
                y: { beginAtZero: true }
            }
        }
    });

    // Bar chart for clicks (organic and sponsored)
    const clicksData = {
        labels: ['This Week', 'Last Week'],
        datasets: [
            {
                label: 'Organic Clicks',
                data: [<%= weeklyTotals.week1.clicks.organic %>, <%= weeklyTotals.week2.clicks.organic %>],
                backgroundColor: 'rgba(31,61,133,255)',
                borderColor: 'rgba(31,61,133,255)',
                borderWidth: 1
            },
            {
                label: 'Sponsored Clicks',
                data: [<%= weeklyTotals.week1.clicks.sponsored %>, <%= weeklyTotals.week2.clicks.sponsored %>],
                backgroundColor: 'rgba(189,208,42,255)',
                borderColor: 'rgba(189,208,42,255)',
                borderWidth: 1
            }
        ]
    };

    const clicksCtx = document.getElementById('clicksChart').getContext('2d');
    new Chart(clicksCtx, {
        type: 'bar',
        data: clicksData,
        options: {
            scales: {
                y: { beginAtZero: true }
            }
        }
    });
</script>

<h2 style="text-align: center; margin: top 50px;">Website Analysis</h2>


<!-- Line Chart: Active & New Users (Centered) -->
<div class="chart-container"
    style="display: flex; flex-direction: column; justify-content: center; align-items: center; height: 70vh;">
    <!-- Center both the title and chart -->
    <h3 style="text-align: center;">Website: Active & New Users (Last 90 Days)</h3>
    <canvas id="userChart" style="width: 20vw; height: 20vh;"></canvas>
    <!-- Set canvas to half the viewport width and height -->
</div>

<div style="display: flex; justify-content: flex-start; width: 100%;">
    <!-- Bar Chart: User Sources -->
    <div class="chart-wrapper" style="margin-right: 0px; flex: 1; margin-top: 15px;"> <!-- Correct margin-top -->
        <h3>Website: Users Sources (Top 5)</h3>
        <canvas id="userSourceChart" style="max-width: 600px; width: 100%;"></canvas>
    </div>

    <!-- Bar Chart: Active Users by Country -->
    <div class="chart-wrapper" style="flex: 1; margin-top: 15px;"> <!-- Added margin-top for consistency -->
        <h3>Website: Users Country</h3>
        <canvas id="activeUsersByCountryChart" style="max-width: 600px; width: 100%;"></canvas>
    </div>
</div>


<div class="chart-container"
    style="display: flex; flex-direction: column; justify-content: center; align-items: center; height: 80vh;">
    <!-- Center both title and chart -->
    <h3 style="text-align: center;">Website: Views by Page</h3>
    <canvas id="pageViewsChart" style="width: 20vw; height: 20vh;"></canvas> <!-- Half screen width and height -->
</div>


<script>
    // Pass backend data to frontend (ensure correct EJS syntax with <%= %>)
const websiteData = <%- JSON.stringify(websiteData) %>;

    // Line Chart: Active vs. New Users
        const userChart = new Chart(document.getElementById('userChart'), {
            label: 'Active & New Users (Last 90 Days)',
            type: 'line',
            data: {
                labels: websiteData.weeklyIncrements,  // Use the actual dates for each week
                datasets: [
                    {
                        label: 'Active Users',
                        borderColor: 'rgba(31, 61, 133, 255)',
                        backgroundColor: 'rgba(31, 61, 133, 255)',
                        data: websiteData.activeUsers
                    },
                    {
                        label: 'New Users',
                        borderColor: 'rgba(189, 208, 42, 255)',
                        backgroundColor: 'rgba(189, 208, 42, 255)',
                        data: websiteData.newUsers
                    }
                ]
            }
    });

    // Bar Chart: User Sources
    const userSourceChart = new Chart(document.getElementById('userSourceChart'), {
        type: 'bar',
        data: {
            labels: Object.keys(websiteData.userSources),
            datasets: [{
                label: 'User Sources',
                backgroundColor: 'rgba(31, 61, 133, 255)',
                borderColor: 'rgba(255, 159, 64, 1)',
                data: Object.values(websiteData.userSources)
            }]
        }
    });

    // Bar Chart: Active Users by Country
    const activeUsersByCountryChart = new Chart(document.getElementById('activeUsersByCountryChart'), {
        type: 'bar',
        data: {
            labels: Object.keys(websiteData.activeUsersByCountry),
            datasets: [{
                label: 'Active Users by Country',
                backgroundColor: 'rgba(189,208,42,255)',
                borderColor: 'rgba(189,208,42,255)',
                data: Object.values(websiteData.activeUsersByCountry)
            }]
        }
    });

    // Bar Chart: Page Views
    const pageViewsChart = new Chart(document.getElementById('pageViewsChart'), {
        type: 'bar',
        data: {
            labels: Object.keys(websiteData.pageViews),
            datasets: [{
                label: 'Page Views',
                backgroundColor: 'rgba(31,61,133,255)',
                borderColor: 'rgba(31,61,133,255)',
                data: Object.values(websiteData.pageViews)
            }]
        }
    });
</script>

<div style="text-align: center; margin-top: 40px;">
    <p style="font-size: 14px;">
        For more detailed reports, See:
        <a href="https://analytics.google.com/analytics/web/?utm_source=marketingplatform.google.com&utm_medium=et&utm_campaign=marketingplatform.google.com%2Fabout%2Fanalytics%2F#/p451243375/reports/explorer?params=_u..nav%3Dmaui%26_u.date00%3D20241007%26_u.date01%3D20241018%26_u.date10%3D20240923%26_u.date11%3D20241004&r=9803226048&collectionId=business-objectives" target="_blank" style="text-decoration: none; color: #1f3d85;">Traffic acquisition</a>
        or 
        <a href="https://analytics.google.com/analytics/web/#/p451243375/reports/reportinghub?params=_u..nav%3Dmaui%26_u.dateOption%3Dlast28Days%26_u.comparisonOption%3Ddisabled&collectionId=business-objectives" target="_blank" style="text-decoration: none; color: #1f3d85;">In-Depth Report</a>.
    </p>
</div>
</body>
</body>

</html>